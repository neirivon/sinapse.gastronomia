# /home/neirivon/SINAPSE2.0/GASTRONOMIA/pages/04_Plano_Acao.py

import streamlit as st
import pandas as pd

# ==== CSS Global (legibilidade/consist√™ncia) ====
st.markdown("""
<style>
h1 { font-size: 42px !important; font-weight: 700 !important; }
h2, h3 { font-size: 30px !important; font-weight: 600 !important; }
p, li, div, span { font-size: 22px !important; }
.caption { font-size: 18px !important; color: #444 !important; }
.stTable table { font-size: 22px !important; }
.stTable th, .stTable td { font-size: 22px !important; }
.card { padding:16px; border-radius:14px; border:1px solid #e6e6e6; background:#fafafa; margin-bottom:14px; }
.card-info{ border-left:6px solid #1565C0; }
.card-ok  { border-left:6px solid #2e7d32; }
.card-warn{ border-left:6px solid #f9a825; }
.card-ia  { border-left:6px solid #8e24aa; }
.badge { display:inline-block; padding:2px 8px; border-radius:8px; background:#e8f0fe; border:1px solid #c7dafc; font-size:18px; }
</style>
""", unsafe_allow_html=True)

# ==== Cabe√ßalho ====
st.markdown("""
<div style="padding:18px; border-radius:16px; background:#eef9f1; border:1px solid #cde9d6; margin-bottom:16px;">
  <h1 style="margin:0;">üõ†Ô∏è Plano de A√ß√£o</h1>
  <p style="margin:6px 0 0 0;">Desdobramento dos objetivos em tarefas, respons√°veis, prazos, recursos e indicadores.</p>
</div>
""", unsafe_allow_html=True)

st.markdown("""
<div class="card card-info">
<b>Escopo:</b> IFRS ‚Äì Campus Central ¬∑ Curso T√©cnico em Gastronomia ¬∑ Estudo de Caso 8 (Falta de di√°logo com a comunidade).<br/>
<b>Horizonte:</b> 2 semestres (2025/1 e 2025/2).<br/>
<b>Alinhamento:</b> Dimens√µes da <i>Rubrica</i> (Participa√ß√£o, Curr√≠culo, Projetos/Parcerias, Perman√™ncia/√äxito, Inova√ß√£o/IA).
</div>
""", unsafe_allow_html=True)

# ==== Plano mestre (tabela principal) ====
st.subheader("üìã Plano mestre (tarefas, prazos e indicadores)")

plano = pd.DataFrame([
    # N¬∫, Dimens√£o, A√ß√£o, Respons√°vel, Co-respons√°veis, In√≠cio, Fim, Entreg√°veis, Indicadores, Evid√™ncias
    [1, "1. Participa√ß√£o Comunit√°ria",
     "Instituir Conselho Consultivo Comunit√°rio e calend√°rio bimestral",
     "Neirivon", "Gerson; Profa. Juliene", "2025-03-01", "2025-12-15",
     "Portaria do Conselho; calend√°rio; 4 atas p√∫blicas",
     "‚â•4 reuni√µes/ano; participa√ß√£o externa ‚â• 25 pessoas/semestre",
     "Portaria; atas; lista de presen√ßa; relat√≥rios de devolutiva"],

    [2, "1. Participa√ß√£o Comunit√°ria",
     "Canais de escuta: formul√°rio + chatbot WhatsApp/Telegram",
     "Gerson", "Neirivon; Profa. Juliene", "2025-03-15", "2025-06-30",
     "QR code; link; bot operacional; base de dados",
     "‚â•300 intera√ß√µes/semestre; tempo m√©dio de resposta ‚â§ 24h",
     "Prints do bot; logs; planilhas de feedback; relat√≥rio semestral"],

    [3, "2. Curr√≠culo Regionalizado",
     "Mapear repert√≥rio local (receitas, t√©cnicas, ingredientes; mestres de of√≠cio)",
     "Neirivon", "Gerson", "2025-03-10", "2025-05-30",
     "Cat√°logo regional (PDF/Streamlit); lista de convidados",
     "‚â•30 itens mapeados; ‚â•6 convidados/ano",
     "Cat√°logo; termos de convite; registros fotogr√°ficos"],

    [4, "2. Curr√≠culo Regionalizado",
     "Inserir ‚â•30% de conte√∫dos/pr√°ticas regionais no PPC/planos de ensino",
     "Profa. Juliene", "NDE; Colegiado", "2025-06-01", "2025-10-30",
     "Propostas de altera√ß√£o; aprova√ß√£o em ata",
     "‚â•30% dos componentes adaptados; plano de acompanhamento",
     "Propostas; pareceres; atas do NDE/Colegiado"],

    [5, "3. Projetos & Parcerias",
     "Feiras/oficinas semestrais integradas ao calend√°rio municipal",
     "Gerson", "Neirivon; parceiros externos", "2025-06-15", "2025-12-10",
     "2 eventos (2025/1 e 2025/2) com programa√ß√£o",
     "P√∫blico total ‚â• 200 pessoas/ano; satisfa√ß√£o ‚â• 85%",
     "Programa√ß√£o; of√≠cios; lista de presen√ßa; pesquisa NPS"],

    [6, "3. Projetos & Parcerias",
     "Firmar parcerias com produtores/restaurantes/turismo/ONGs",
     "Neirivon", "Gerson", "2025-04-01", "2025-11-30",
     "‚â•8 termos de parceria/ano (MOUs) registrados",
     "‚â•8 parcerias ativas; ‚â•1 a√ß√£o por parceria",
     "MOUs assinados; relat√≥rios de a√ß√£o; registro fotogr√°fico"],

    [7, "4. Perman√™ncia & √äxito",
     "Implantar Tutoria de Acolhimento (ingressantes) e de Percurso (veteranos)",
     "Profa. Juliene", "Coordena√ß√£o; Assist√™ncia Estudantil", "2025-03-20", "2025-12-15",
     "Plano de tutoria; agenda; registro de atendimentos",
     "Redu√ß√£o de evas√£o em 20% vs. 2024; presen√ßa ‚â• 80%",
     "Planilhas de tutoria; relat√≥rios bimestrais; SIGAA"],

    [8, "4. Perman√™ncia & √äxito",
     "Alerta precoce: monitorar faltas e engajamento (dash simples)",
     "Gerson", "Neirivon", "2025-04-10", "2025-06-30",
     "Painel Streamlit com dados de presen√ßa/participa√ß√£o",
     "Alertas gerados; atendimentos realizados ‚â• 80% dos casos",
     "Dash; prints; registros de atendimento"],

    [9, "5. Inova√ß√£o Tecnol√≥gica (IA)",
     "Consolidar feedback do chatbot em painel Streamlit + relat√≥rio ao NDE",
     "Neirivon", "Gerson", "2025-06-01", "2025-12-05",
     "Painel de feedback; 2 relat√≥rios/ano (devolutiva p√∫blica)",
     "2 relat√≥rios publicados; issues priorizadas",
     "Relat√≥rios PDF; link do painel; evid√™ncias de resposta √† comunidade"]
], columns=[
    "N¬∫", "Dimens√£o", "A√ß√£o", "Respons√°vel", "Co-respons√°veis",
    "In√≠cio", "Fim", "Entreg√°veis", "Indicadores", "Evid√™ncias"
])

plano.index = pd.Index(range(1, len(plano) + 1), name="N¬∫")
st.table(plano.style.set_properties(**{"font-size": "22px"}))

# ==== Download do plano em CSV ====
csv_bytes = plano.to_csv(index=True).encode("utf-8")
st.download_button(
    label="‚¨áÔ∏è Baixar plano (CSV)",
    data=csv_bytes,
    file_name="plano_de_acao_gastronomia.csv",
    mime="text/csv"
)

st.divider()

# ==== Cronograma por semestre (vis√£o macro) ====
st.subheader("üóìÔ∏è Cronograma macro (2025/1 ‚Üí 2025/2)")
cronograma = pd.DataFrame({
    "Frente": [
        "Conselho Consultivo", "Canais de Escuta (Form + Chatbot)",
        "Cat√°logo Regional + Convidados", "Curr√≠culo Regional (PPC/Planos)",
        "Feiras/Oficinas", "Parcerias (MOUs)",
        "Tutoria (Acolhimento/Percurso)", "Alerta Precoce (Dash)",
        "Relat√≥rios ao NDE + Devolutivas"
    ],
    "2025/1": [
        "Constitui√ß√£o + 2 reuni√µes", "Implanta√ß√£o + divulga√ß√£o",
        "Mapeamento + cat√°logo", "Propostas preliminares",
        "Planejamento do 1¬∫ evento", "Prospectar e assinar MOUs",
        "Implanta√ß√£o e atendimentos", "MVP do painel",
        "1¬∫ relat√≥rio (junho)"
    ],
    "2025/2": [
        "2 reuni√µes + avalia√ß√£o", "Opera√ß√£o cont√≠nua",
        "Convidados em aulas/oficinas", "Aprova√ß√£o e implementa√ß√£o",
        "Execu√ß√£o 2 eventos/ano", "Acompanhamento das a√ß√µes",
        "Acompanhamento e consolida√ß√£o", "Painel est√°vel + melhorias",
        "2¬∫ relat√≥rio (dezembro)"
    ]
})
cronograma.index = pd.Index(range(1, len(cronograma)+1), name="N¬∫")
st.table(cronograma.style.set_properties(**{"font-size": "22px"}))

st.divider()

# ==== RACI resumido ====
st.subheader("üë• RACI (pap√©is e responsabilidades)")
raci = pd.DataFrame({
    "Tarefa chave": [
        "Conselho Consultivo", "Chatbot WhatsApp/Telegram", "Cat√°logo Regional",
        "Curr√≠culo Regional (PPC/Planos)", "Feiras/Oficinas", "Parcerias",
        "Tutoria", "Alerta Precoce (Dash)", "Relat√≥rios ao NDE"
    ],
    "R (Respons√°vel)": [
        "Neirivon", "Gerson", "Neirivon",
        "Profa. Juliene", "Gerson", "Neirivon",
        "Profa. Juliene", "Gerson", "Neirivon"
    ],
    "A (Aprovador)": [
        "Coordena√ß√£o", "Coordena√ß√£o", "Coordena√ß√£o",
        "NDE/Colegiado", "Coordena√ß√£o", "Dire√ß√£o",
        "Dire√ß√£o/Coordena√ß√£o", "Coordena√ß√£o", "NDE/Coordena√ß√£o"
    ],
    "C (Consultado)": [
        "Comunidade/Parceiros", "Comunidade/Alunos", "Mestres locais",
        "Docentes", "Parceiros/Prefeitura", "Parceiros",
        "Assist√™ncia Estudantil", "Docentes", "Comunidade/Conselho"
    ],
    "I (Informado)": [
        "Comunidade/Alunos", "Comunidade/Alunos", "Comunidade",
        "Comunidade", "Comunidade", "Comunidade",
        "Alunos/Fam√≠lias", "Alunos", "Comunidade"
    ]
})
raci.index = pd.Index(range(1, len(raci)+1), name="N¬∫")
st.table(raci.style.set_properties(**{"font-size": "22px"}))

st.divider()

# ==== Riscos & Mitiga√ß√µes ====
st.subheader("‚ö†Ô∏è Riscos e estrat√©gias de mitiga√ß√£o")
riscos = pd.DataFrame({
    "Risco": [
        "Baixa ades√£o da comunidade ao Conselho",
        "Pouca intera√ß√£o no chatbot/escuta",
        "Atraso na aprova√ß√£o do curr√≠culo regional",
        "Parcerias sem execu√ß√£o efetiva",
        "Sobrecarga da equipe (tempo/agenda)"
    ],
    "Mitiga√ß√£o": [
        "Campanha com lideran√ßas locais; reuni√µes itinerantes; hor√°rios flex√≠veis",
        "Divulga√ß√£o com QR code em eventos e redes; integra√ß√£o com WhatsApp",
        "Trabalho pr√©vio com NDE e docentes; pilotos antes da aprova√ß√£o formal",
        "Planos de a√ß√£o por MOU com metas m√≠nimas; revis√£o trimestral",
        "RACI claro; cronograma realista; prioriza√ß√£o e uso de templates"
    ],
    "Indicador de controle": [
        "‚â• 25 participantes/semestre",
        "‚â• 300 intera√ß√µes/semestre; resposta ‚â• 90%",
        "‚â• 30% de componentes adaptados em 2025/2",
        "‚â• 1 a√ß√£o por parceria/semestre",
        "Entreg√°veis no prazo ‚â• 85%"
    ]
})
riscos.index = pd.Index(range(1, len(riscos)+1), name="N¬∫")
st.table(riscos.style.set_properties(**{"font-size": "22px"}))

st.caption("Observa√ß√£o: este plano est√° alinhado aos objetivos (p√°gina Objetivos) e aos n√≠veis da Rubrica.")

